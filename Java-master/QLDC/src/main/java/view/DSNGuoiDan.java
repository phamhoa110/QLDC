      /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import model.Person;
import model.PersonDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.HoDan;

import ConnectDB.ConnectJDBC;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author Admin
 */
public class DSNGuoiDan extends javax.swing.JFrame {
    PersonDAO personDAO = new PersonDAO();
    List<Person> listPersons = personDAO.getAllPerson();
    DefaultTableModel model = new DefaultTableModel();
    /**
     * Creates new form DSNGuoiDan
     */
    public DSNGuoiDan() {
        initComponents();
        initTable();
        fillTable();
        initMajor();
        txtTongSoNguoi.setEnabled(false);
        txtID.setEnabled(false);
        setTitle("Danh sách người dân");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAll = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        txtNamSinh = new javax.swing.JTextField();
        txtNgheNghiep = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTongSoNguoi = new javax.swing.JTextField();
        cboSoNha = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/users_32.png"))); // NOI18N
        jLabel1.setText("NGƯỜI DÂN TRONG KHU PHỐ");

        tblAll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Họ tên", "Tuổi", "Năm sinh", "Nghề nghiệp", "Số nhà"
            }
        ));
        tblAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAllMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAll);

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/login_User_32.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/create_32.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete32.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/home_32.png"))); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Họ tên");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Tuổi");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Năm sinh");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Nghề nghiệp");

        txtHoTen.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        txtTuoi.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        txtNamSinh.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        txtNgheNghiep.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("Số nhà");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("ID");

        txtID.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Tổng số người");

        txtTongSoNguoi.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        cboSoNha.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        cboSoNha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSoNha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSoNhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHome)
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNamSinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(txtNgheNghiep, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHoTen)
                            .addComponent(txtID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTongSoNguoi)
                            .addComponent(cboSoNha, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnHome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnThem)
                    .addComponent(jLabel8)
                    .addComponent(txtTongSoNguoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNamSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNgheNghiep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cboSoNha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initMajor(){
        List<String> item = new ArrayList<>();
         Connection conn = null;
        conn = ConnectJDBC.connect();
        String query = "SELECT SoNha FROM hodan";
        Statement stm = null;
        try {
            //Tạo đối tượng Statement
            stm = conn.createStatement();

            //Thực thi truy vấn và trả về đối tượng ResultSet
            ResultSet rs = stm.executeQuery(query);
          
            //Duyệt kết quả trả về
            while (rs.next()){  //Di chuyển con trỏ xuống bản ghi kế tiếp
                int selectedItem = rs.getInt("SoNha");
                String duochon = ""+ selectedItem;
                item.add(duochon);
            }
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
        String majors[] = new String[item.size()];
        
        for(int i = 0;i<item.size();i++){
//            System.out.println("Item"+item.get(i));
            majors[i] = item.get(i);
        }
       
        DefaultComboBoxModel <String> comboBoxModel = new DefaultComboBoxModel<>(majors);
        cboSoNha.setModel(comboBoxModel);
        
    }
    private void initTable(){
        String[] colums = new String[]{
            "ID", "Họ tên", "Tuổi", "Năm sinh", "Nghề nghiệp", "Số nhà"
        };
        model.setColumnIdentifiers(colums);
        
        tblAll.setModel(model);
        
    }
    
     private void fillTable(){
        model.setRowCount(0);
        for (Person person : listPersons) {
            model.addRow(new Object[]{person.getId(), person.getHoten(), person.getTuoi(), person.getNamsinh(), person.getNghenghiep(), person.getSonha()
            });
        }
        model.fireTableDataChanged();
    }
     
    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        FrMain frMain = new FrMain();
        frMain.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        conn = ConnectJDBC.connect();
      String kq = "";
    int sonha = Integer.parseInt(cboSoNha.getSelectedItem().toString());
    String hoten = txtHoTen.getText();
    int tuoi = Integer.parseInt(txtTuoi.getText());
    String namsinh = txtNamSinh.getText();
    String nghengiep = txtNgheNghiep.getText();
    
    
    
    String query = "INSERT INTO nguoi(ID ,HoTen, Tuoi, NamSinh, NgheNghiep, SoNha) " + "VALUES (null,?, ?, ?, ?, ?)";
    PreparedStatement pstm = null;
 
        System.out.println("Query"+query);
    try {
            pstm = conn.prepareStatement(query);
            
            pstm.setString(1, hoten);
            pstm.setInt(2, tuoi);
            pstm.setString(3, namsinh);
            pstm.setString(4, nghengiep);
            pstm.setInt(5, sonha);
            
            int row = pstm.executeUpdate();
            if(row != 0){
                System.out.println("Thêm thành công " + row);
                kq = "Thêm thành công 1";
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        query = "SELECT * FROM nguoi";
        
        Statement stm = null;
        try {
            //Tạo đối tượng Statement
            stm = conn.createStatement();

            //Thực thi truy vấn và trả về đối tượng ResultSet
            ResultSet rs = stm.executeQuery(query);
           listPersons.clear();
            //Duyệt kết quả trả về
            while (rs.next()){  //Di chuyển con trỏ xuống bản ghi kế tiếp
               
                int id = rs.getInt("ID");
                String name1 = rs.getString("HoTen");
                String job = rs.getString("NgheNghiep");
                String dob1 = rs.getString("NamSinh");
                int age1 = rs.getInt("Tuoi");
                int sonha1 = rs.getInt("SoNha");
                
                Person person = new Person();
                person.setId(id);
                person.setHoten(name1);
                person.setTuoi(age1);
                person.setNamsinh(dob1);
                person.setNghenghiep(job);
                person.setSonha(sonha1);
                listPersons.add(person);
               fillTable();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
       if(!kq.equals("")){
           query = "UPDATE hodan SET SoNguoi = SoNguoi + 1 WHERE SoNha = "+sonha;
            try {
                pstm = conn.prepareStatement(query);
                pstm.executeUpdate();

            } catch (SQLException e) {
                e.printStackTrace();
            }
       }
       
       query = "SELECT COUNT(ID) AS TongSoNguoi FROM nguoi";
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(query);
            while(rs.next()){
                int tongSoNguoi = rs.getInt("TongSoNguoi");
                txtTongSoNguoi.setText(""+tongSoNguoi);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAllMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblAll.getSelectedRow();
        if(selectedRow >= 0){
            int id = (int) tblAll.getValueAt(selectedRow, 0);
            for (Person person : listPersons) {
                if(id == person.getId()){
                    txtID.setText(""+id);
                    txtHoTen.setText(person.getHoten());
                    txtTuoi.setText(""+person.getTuoi());
                    txtNamSinh.setText(person.getNamsinh());
                    txtNgheNghiep.setText(person.getNghenghiep());
                    cboSoNha.setSelectedItem(""+person.getSonha());
                    break;
            }
        }
        }
    }//GEN-LAST:event_tblAllMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(txtID.getText());
        String hoten = txtHoTen.getText();
        String namsinh = txtNamSinh.getText();
        String nghenghiep = txtNgheNghiep.getText();
        int sonha = Integer.parseInt(cboSoNha.getSelectedItem().toString());
        int tuoi = Integer.parseInt(txtTuoi.getText());
        int choice = JOptionPane.showConfirmDialog(this, "Co chac chan sua ko?", "Noti", JOptionPane.YES_NO_OPTION);
        if(choice == JOptionPane.NO_OPTION){
            return;
        }
        for (Person person : listPersons) {
            
            if (id == person.getId()){
                person.setId(id);
                person.setHoten(hoten);
                person.setTuoi(tuoi);
                person.setNamsinh(namsinh);
                person.setNghenghiep(nghenghiep);
                person.setSonha(sonha);
                break;
            }
        }
        fillTable();
        
        Connection conn = null;
        conn = ConnectJDBC.connect();
        /*Person editPerson = new Person();
        editPerson.setId(id);*/
        String query = "UPDATE nguoi SET HoTen = ?, Tuoi = ?, NamSinh = ?, NgheNghiep = ?, SoNha = ? WHERE ID = ?";
        
       
        PreparedStatement pstm = null;
        try {
            pstm = conn.prepareStatement(query);
          
            pstm.setInt(6, id);
            pstm.setInt(2, tuoi);
            pstm.setString(1, hoten);
            pstm.setString(3, namsinh);
            pstm.setString(4, nghenghiep);
            pstm.setInt(5, sonha);
            int row = pstm.executeUpdate();
            
            if(row != 0){
                System.out.println("Sửa thành công " + row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(txtID.getText());
        int sonha = Integer.parseInt(cboSoNha.getSelectedItem().toString());
        String kq = "";
        int choice = JOptionPane.showConfirmDialog(this, "Co chac chan xoa ko?", "Noti", JOptionPane.YES_NO_OPTION);
        if(choice == JOptionPane.NO_OPTION){
            return;
        }
        for (Person person : listPersons) {
            id = person.getId();
            if (id == Integer.parseInt(txtID.getText())){
                listPersons.remove(person);
                break;
            }
        }
        fillTable();
       
        
        
        Connection conn = null;
        conn = ConnectJDBC.connect();
        String query = "DELETE FROM nguoi WHERE ID = ?";
        
        PreparedStatement pstm = null;
        try {
            pstm = conn.prepareStatement(query);
            pstm.setInt(1, id);
            
            int row = pstm.executeUpdate();
            if(row != 0){
                System.out.println("Xóa thành công " + row);
                kq = "Xóa thành công 1";
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        if(!kq.equals("")){
           query = "UPDATE hodan SET SoNguoi = SoNguoi - 1 WHERE SoNha = "+sonha;
            try {
                pstm = conn.prepareStatement(query);
               pstm.executeUpdate();

            } catch (SQLException e) {
                e.printStackTrace();
            }
       }
        
        query = "SELECT COUNT(ID) AS TongSoNguoi FROM nguoi";
        Statement stm = null;
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(query);
            while(rs.next()){
                int tongSoNguoi = rs.getInt("TongSoNguoi");
                txtTongSoNguoi.setText(""+tongSoNguoi);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Connection conn = null;
        conn = ConnectJDBC.connect();
      
       String query = "SELECT * FROM nguoi";
        Statement stm = null;
        try {
            //Tạo đối tượng Statement
            stm = conn.createStatement();

            //Thực thi truy vấn và trả về đối tượng ResultSet
            ResultSet rs = stm.executeQuery(query);
           
           listPersons.clear();
            //Duyệt kết quả trả về
            while (rs.next()){  //Di chuyển con trỏ xuống bản ghi kế tiếp
                int sonha = rs.getInt("SoNha");
                int id = rs.getInt("ID");
                String hoten = rs.getString("HoTen");
                int tuoi = rs.getInt("Tuoi");
                String namsinh = rs.getString("NamSinh");
                String nghenghiep = rs.getString("NgheNghiep");
                
                Person person = new Person();
                person.setId(id);
                person.setHoten(hoten);
                person.setTuoi(tuoi);
                person.setNamsinh(namsinh);
                person.setNghenghiep(nghenghiep);
                person.setSonha(sonha);
                listPersons.add(person);
               
                fillTable();
               
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        query = "SELECT COUNT(ID) AS TongSoNguoi FROM nguoi";
        try {
            stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(query);
            while(rs.next()){
                int tongSoNguoi = rs.getInt("TongSoNguoi");
                txtTongSoNguoi.setText(""+tongSoNguoi);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void cboSoNhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSoNhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSoNhaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DSNGuoiDan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DSNGuoiDan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DSNGuoiDan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DSNGuoiDan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DSNGuoiDan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboSoNha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAll;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNamSinh;
    private javax.swing.JTextField txtNgheNghiep;
    private javax.swing.JTextField txtTongSoNguoi;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables
}
